# Auto detect text files and perform LF normalization
!DOCTYPE html>
<!DOCTYPE html>
<html lang="en">
<head>
     <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap"
      rel="stylesheet"
    />
    <script src="https://cdn.jsdelivr.net/npm/axios@1.1.2/dist/axios.min.js"></script>
    <link rel="stylesheet" href="src/styles.css" />
    <title>Document</title>
</head>
    <style>
        p{
            font-size: 20px;
        }
        .Weather-Forecast-date {
            text-align:center;
            color:rgba(39,33,66,0.4);
            font-size:16px;
            line-height:20px;
            maegin-buttom:10px;
        }
        .Weather-Forecast-icon{
            text-align:center;
            font-size:38px;

        }
        .Weather-Forecast-temperatures {
            text-align:center;
            color:#f65282;
            display: flex;
            justify-content: center;
            maegin-top:10px; 
        }
        .Weather-Forecast-temperature{
            padding: 0 10px;
        }
        .weather-forecast {
            display: flex;
            justify-content: space-around;
            margin-top: 30px;
        }
        </style>
        <body>

    <div class = "Weather-Forecast">

        <header>
            <form class="seach-form" id ="seach-form">
            <input type = "Search" placeholder = "Enter a city" required class="search-form-input"/>
            <input type = "Submit" value = "Search" class ="search-form-button"/>
            </form>
            </header>
        <main>
            <div class="weather-app-data" >  
            <div >
                <h1 class = "weather-app-city" id="city">
                </h1> 
                <p class="weather-app-details">
                    <span id = "time"></span>
                    <span id="description"></span>
                    <br/>
                <br/>
                Humidity:<strong id="humidity"></strong></strong>, Wind: <strong id ="wind-speed"></strong>
                </p> </div>
                <div class="weather-app-temperatures">
                    <div id="icon"></div>
                    <div class ="weather-app-temperature-value" id ="temperature"></div>
                    <div class="weather-app-unt">&deg C</div> </div>
            </div>
            <div class = "weather-forecast">
                <div class="Weather-Forecast-day">
                <div class="Weather-Forecast-date">Tue</div>
                <div class="Weather-Forecast-icon">üå§Ô∏è</div>
                <div class="Weather-Forecast-temperatures">
                <div class="Weather-Forecast-temperature">
                <strong>15&deg C</strong></div>
<div class ="Weather-Forecast-temperature">9&deg C </div>
                </div>

                </div>
            </div>
    </main>
      </body> 
            </body>
            <footer>
        <p>
          This project was coded by
          <a href="https://github.com/Zimkhitha123/FinalProjectWeatherApp/settings" target="_blank">Zimkhitha Mbanyaru</a> and is
          <a href="https://github.com/" target="_blank"> open-source on GitHub</a> and
          <a href="https://app.netlify.com/teams/zimkhitha123/overview" target="_blank">hosted on Netlify</a>
        </p>
      </footer>
    </div>
    
    <stript>
    function displayForecast(response){
    console.log(response.data);
    getForecast(response.data.city);
    let forecastElement = document.querySelector("#forecast");
    let days = ["Tue","Wed","Thu","Fri","Sat"];
    let forecastHTML = "";
    forecastElement.innerHTML =forecastHTML;
    response.data.dailt.forEach(function(day , index)){
        if (index < 5){
    forecastHTML = forecastHTML+ `<div class="weather-forecast-day">
    <div class = "weather-forecast-date"> ${formatDate(day.time)}</div>
    <img src = "${day.condition.icon-Url}" class = "weather-forecast-icon"></div>
    <div class="weather-forecast-temperatures">
    <div class ="weather-forecast-temperature"><strong> ${math.round(day.temperature.maximum)}&deg</strong></div>
<div class = ""weather-forecast-temperature"><strong> ${math.round(day.temperature.minimum)}&deg</strong></div>
   <div class = "weather-forecast-temperature">9&deg C</div>
   </div>
   </div>`;
    }
}
}
function updateWeather(response) {
    let temperatureElement = document.querySelector("#temperature");
    let temperature = response.data.temperature.current;
    let cityElement = document.querySelector("#city");
    cityElement.innerHTML = Math.round(temperature);

    let descriptionElement = document.querySelector("#description");
    descriptionElement.innerHTML = response.data.condition.description;

    let humidityElement = document.querySelector("#humidity");
    humidityElement.innerHTML = `${response.data.temperature.humidity}%`;

    let windSpeedElement = document.querySelector("#windspeed");
    windSpeedElement.innerHTML = `${response.data.wind.speed} km/h`;

    let date = new Date(response.data.time * 1000);
    let timeElement = document.querySelector("#time");
    timeElement.innerHTML = formatDate(date);

    let iconElement = document.querySelector("#icon");
    iconElement.innerHTML = `<img src="${response.data.condition.icon_url}" class="weather-app-icon"/>`;
    displayForecast();

}

function searchCity(city) {
    let apiKey = "d30t4b87a85aoafbb624a05843fdcb6d";
    let apiUrl = `https://api.shecodes.io/weather/v1/current?query=${city}&key=${apiKey}`;
    axios.get(apiUrl).then(updateWeather);
}

function handleSearchSubmit(event) {
    event.preventDefault();
    let searchInput = document.querySelector("#search-form-input");
    searchCity(searchInput.value);
}

function formatDate(date) {
    let date = new S=Date(date * 1000);
    let day = date.getDay();
    let minutes = date.getMinutes();
    let hours = date.getHours();
    let days = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
    let dayName = days[day];

    if (minutes < 10) {
        minutes = `0${minutes}`;
    }

    return days[date.getDay()];
}
function getForecast(city){
    let apiKey = "d30t4b87a85aoafbb624a05843fdcb6d";
    let apiUrl = `https://api.shecodes.io/weather/v1/current?query= ${city}&key= ${apiKey}&unit = metric`;

}

let searchFormElement = document.querySelector("#search-form");
searchFormElement.addEventListener("submit", handleSearchSubmit);
searchCity("paris");

    </stript>
        <script src="Finaljava.js"></script>
    </html>
